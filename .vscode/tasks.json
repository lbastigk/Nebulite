{
    "version": "2.0.0",
    "tasks": [
        // BUILD FOR LINUX, USING CMAKE
        {
            "label": "Full Build for Linux",
            "type": "shell",
            "command": "cmake ./ && make",
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": [],
            "detail": "Build the project by running 'make' and 'cmake' in the appropriate directories"
        },
        // BUILD FOR LINUX, USING CMAKE + start Test
        {
            "label": "Full Build for Linux + Testing",
            "type": "shell",
            "command": "cmake ./ && make && cd ./Application/ && ./Tests.sh",
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": [],
            "detail": "Build the project by running 'make' and 'cmake' in the appropriate directories"
        },   
        {
            "label": "Full Build for Linux + Testing + Profiling",
            "type": "shell",
            "command": "sudo sysctl -w kernel.perf_event_paranoid=-1 && sudo sysctl -w kernel.kptr_restrict=0 && cmake ./ && make && cd ./Application && timeout 5s perf record -a -g -- ./Tests.sh ; perf report",
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": [],
            "detail": "Build the project and run Tests.sh under perf to profile performance."
        },           
        // BUILD ON WINDOWS, USING CMAKE
        {
            "label": "Full Build for Windows",
            "type": "shell",
            "command": "cmake -DCMAKE_TOOLCHAIN_FILE=mingw-toolchain.cmake -B ./Application/bin -S . && cmake --build ./Application/bin",
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": [],
            "detail": "Build the project by running 'cmake' and 'make' in the appropriate directories"
        },
        // BUILD EXAMPLE QT5 MAIN
        {
            "label": "Example QT5 app",
            "type": "shell",
            "command": "cd ./ProjectEditor/ExampleBuild/ && ./build.sh",
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": [],
            "detail": "Builds the _ExampleMain"
        },
    ]
}
