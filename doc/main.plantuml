@startuml MainLoop
!theme plain
skinparam defaultTextAlignment center
skinparam wrapWidth 200
skinparam maxMessageSize 150

skinparam activity {
  StartColor lightgreen
  EndColor lightcoral
  BackgroundColor lightblue
  BorderColor blue
}
skinparam ActivityDiamondBackgroundColor wheat
skinparam groupInheritance 2

title NEBULITE Engine - Main Loop Architecture

start

:Parse command-line arguments;
note right
  Split by ';' and add to taskList
  Default: "set-fps 60" if no args
end note

:Initialize Nebulite namespace;
note right: Nebulite::init()

:Setup task queues and variables;
note right
  - tasks_script (from CLI)
  - tasks_internal 
  - tasks_always
  - Error handling vars
end note

repeat

  group Task Queue Processing
    if (Critical stop?) then (no)
      :Process script tasks;
      note right: resolveTaskQueue(tasks_script)
      
      if (Critical error?) then (yes)
        :Set critical_stop = true;
        stop
      endif
      
      :Process internal tasks;
      note right: resolveTaskQueue(tasks_internal)
      
      if (Critical error?) then (yes)
        :Set critical_stop = true;
        stop
      endif
      
      :Process always tasks;
      note right: resolveTaskQueue(tasks_always)
      
      if (Critical error?) then (yes)
        :Set critical_stop = true;
        stop
      endif
    else
      :Skip task processing;
    endif
  end group

  group Rendering
    if (Renderer exists AND time to render?) then (yes)
      :Update and render frame;
      note right
        renderer->tick()
        Decrement waitCounter
      end note
    endif
  end group

repeat while (Renderer exists AND not quit AND not critical_stop?)

:Cleanup and exit;
note right
  - Destroy renderer
  - Turn off error log
  - Return appropriate exit code
end note

stop

@enduml