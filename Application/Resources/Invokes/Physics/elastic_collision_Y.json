{
  "comment0" : "Collision ruleset for reflecting Y velocity",
  "comment1" : "All in logicalArg array must be true",
  "logicalArg": [
    "neq($(global.time.t), $(self.collision.time.lastY))",
    "neq($(self.id),          $(other.id))",
    "$(other.physics.mass)",
    " lt($(self.posX),        $(other.posX) + $(other.pixSizeX))",
    " lt($(self.posY),        $(other.posY) + $(other.pixSizeY))",
    " lt($(other.posX),       $(self.posX)  + $(self.pixSizeX))",
    " lt($(other.posY),       $(self.posY)  + $(self.pixSizeY))",
    "not(  lt($(self.posX)+$(self.pixSizeX) - 2,$(other.posX)) + lt($(other.posX)+$(other.pixSizeX) - 2,$(self.posX))  )"
  ],
  "isGlobal": true,
  "self_invokes": [
    {
      "changeType": "set",
      "key": "physics.vY",
      "value": "$(0.99*$($(self.physics.vY) - (2 * $(other.physics.mass) / ($(self.physics.mass) + $(other.physics.mass))) * ($(self.physics.vY) - $(other.physics.vY))))"
    },
    {
      "changeType": "set",
      "key": "physics.aX",
      "value": "0"
    },
    {
      "changeType": "set",
      "key": "physics.aY",
      "value": "0"
    },
    {
      "changeType": "set",
      "key": "collision.time.lastY",
      "value": "$($(global.time.t) + 0)"
    }
  ],
  "other_invokes": [],
  "global_invokes": [],
  "functioncalls": [
    "eval echo Collision, reflecting Y at $(global.time.t_ms) ms"
  ]
}

