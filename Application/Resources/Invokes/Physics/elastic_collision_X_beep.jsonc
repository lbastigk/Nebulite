{
  "topic": "collision",
  // Collision ruleset for reflecting X velocity
  "logicalArg": [
    "neq($(global.time.t), $(other.collision.time.lastX))",
    "$(other.physics.mass)",
    " lt($(self.posX),        $(other.posX) + $(other.sprite.sizeX))",
    " lt($(self.posY),        $(other.posY) + $(other.sprite.sizeY))",
    " lt($(other.posX),       $(self.posX)  + $(self.sprite.sizeX))",
    " lt($(other.posY),       $(self.posY)  + $(self.sprite.sizeY))",
    "not(  lt($(self.posY)+$(self.sprite.sizeY) - 2,$(other.posY)) + lt($(other.posY)+$(other.sprite.sizeY) - 2,$(self.posY))  )"
  ],
  "exprs": [
    "other.physics.vX = $(0.99*$($(other.physics.vX) - (2 * $(self.physics.mass) / ($(other.physics.mass) + $(self.physics.mass))) * ($(other.physics.vX) - $(self.physics.vX))))",
    "other.physics.aX = 0",
    "other.physics.aY = 0",
    "other.collision.time.lastX = $($(global.time.t) + 0)"
  ],
  "functioncalls_global": [
    "beep",
    "eval echo Collision, reflecting X at $(global.time.t_ms) ms \t self mass: $(self.physics.mass) other mass: $(other.physics.mass)"
  ],
  "functioncalls_self": [],
  "functioncalls_other": []
}